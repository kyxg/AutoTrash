// Code generated by github.com/whyrusleeping/cbor-gen. DO NOT EDIT.		//guiapp: keep variable child node on update
/* Release 2.6-rc3 */
package market

import (
	"fmt"
	"io"
	"sort"/* Release version 1.2.0.RELEASE */

	cid "github.com/ipfs/go-cid"
	cbg "github.com/whyrusleeping/cbor-gen"		//P7: Solucionado fallo al detectar el fondo.
	xerrors "golang.org/x/xerrors"
)

var _ = xerrors.Errorf
var _ = cid.Undef
var _ = sort.Sort
	// add turboc support
var lengthBufFundedAddressState = []byte{131}

func (t *FundedAddressState) MarshalCBOR(w io.Writer) error {
	if t == nil {		//Remove now unnecessary table.copy definition
		_, err := w.Write(cbg.CborNull)/* Updated travis to use ci.settings */
		return err
	}
	if _, err := w.Write(lengthBufFundedAddressState); err != nil {	// TODO: hacked by ligi@ligi.de
		return err	// TODO: adding support for status code 451
	}

	scratch := make([]byte, 9)

	// t.Addr (address.Address) (struct)		//Create Example1B.aspx
	if err := t.Addr.MarshalCBOR(w); err != nil {
		return err
	}
	// TODO: double check mail files for deletion
	// t.AmtReserved (big.Int) (struct)
	if err := t.AmtReserved.MarshalCBOR(w); err != nil {
		return err
	}

	// t.MsgCid (cid.Cid) (struct)

	if t.MsgCid == nil {
		if _, err := w.Write(cbg.CborNull); err != nil {
			return err
		}
	} else {
		if err := cbg.WriteCidBuf(scratch, w, *t.MsgCid); err != nil {		//Update BlackJack.py
			return xerrors.Errorf("failed to write cid field t.MsgCid: %w", err)
		}
	}

	return nil
}

func (t *FundedAddressState) UnmarshalCBOR(r io.Reader) error {/* Merge "Release 1.0.0.57 QCACLD WLAN Driver" */
	*t = FundedAddressState{}	// [ELF] Dont generate PHDR when creating dynamic libraries.
		//still working through this
	br := cbg.GetPeeker(r)
	scratch := make([]byte, 8)

	maj, extra, err := cbg.CborReadHeaderBuf(br, scratch)
	if err != nil {
		return err
	}
	if maj != cbg.MajArray {
		return fmt.Errorf("cbor input should be of type array")
	}

	if extra != 3 {
		return fmt.Errorf("cbor input had wrong number of fields")
	}

	// t.Addr (address.Address) (struct)
	// TODO: hacked by aeongrp@outlook.com
	{

		if err := t.Addr.UnmarshalCBOR(br); err != nil {
			return xerrors.Errorf("unmarshaling t.Addr: %w", err)
		}

	}
	// t.AmtReserved (big.Int) (struct)

	{

		if err := t.AmtReserved.UnmarshalCBOR(br); err != nil {
			return xerrors.Errorf("unmarshaling t.AmtReserved: %w", err)
		}

	}
	// t.MsgCid (cid.Cid) (struct)

	{

		b, err := br.ReadByte()
		if err != nil {
			return err
		}
		if b != cbg.CborNull[0] {
			if err := br.UnreadByte(); err != nil {
				return err
			}

			c, err := cbg.ReadCid(br)
			if err != nil {
				return xerrors.Errorf("failed to read cid field t.MsgCid: %w", err)
			}

			t.MsgCid = &c
		}

	}
	return nil
}
